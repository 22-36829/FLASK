services:
  - type: web
    name: flask-pharma-dashboard
    env: python
    buildCommand: |
      pip install -r requirements.txt
      mkdir -p logs
      chmod 777 logs
      python init_db.py
      flask db upgrade
    startCommand: gunicorn --worker-class eventlet -w 1 --timeout 300 --keep-alive 120 --log-level debug --worker-connections 1000 --backlog 2048 --access-logfile - --error-logfile - --capture-output --enable-stdio-inheritance --max-requests 1000 --max-requests-jitter 50 --graceful-timeout 30 --bind 0.0.0.0:$PORT "wsgi:application"
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: FLASK_APP
        value: wsgi.py
      - key: FLASK_ENV
        value: production
      - key: FLASK_DEBUG
        value: "0"
      - key: PORT
        value: "10000"
      - key: SECRET_KEY
        generateValue: true
      - key: SQLALCHEMY_POOL_SIZE
        value: "10"
      - key: SQLALCHEMY_MAX_OVERFLOW
        value: "5"
      - key: SQLALCHEMY_POOL_TIMEOUT
        value: "30"
      - key: SQLALCHEMY_POOL_RECYCLE
        value: "1800"
      - key: GUNICORN_TIMEOUT
        value: "300"
      - key: GUNICORN_KEEP_ALIVE
        value: "120"
      - key: PYTHONUNBUFFERED
        value: "true"
      - key: EVENTLET_DEBUG
        value: "true"
      - key: WEB_CONCURRENCY
        value: "1"
      - key: SOCKETIO_MESSAGE_QUEUE
        value: "memory://"
      - key: SOCKETIO_PING_TIMEOUT
        value: "60"
      - key: SOCKETIO_PING_INTERVAL
        value: "25"
      - key: LOG_LEVEL
        value: "INFO"
      - key: LOG_FORMAT
        value: "%(asctime)s - %(name)s - %(levelname)s - [%(request_id)s] - %(message)s"
      - key: DATABASE_URL
        fromDatabase:
          name: flask-dashboard-db
          property: connectionString
      - key: PYTHONPATH
        value: /opt/render/project/src
    disk:
      name: uploads
      mountPath: /uploads
      sizeGB: 1
    healthCheckPath: /health/db
    healthCheckTimeout: 5
    autoDeploy: true
    metrics:
      - type: cpu
        threshold: 80
        duration: 5m
      - type: memory
        threshold: 90
        duration: 5m
      - type: http_response_time
        threshold: 2000
        duration: 5m

  - type: postgres
    name: flask-dashboard-db
    ipAllowList: []
    plan: standard
    postgresMajorVersion: "15"
    disk:
      name: data
      sizeGB: 10
    settings:
      statement_timeout: 60000
      idle_in_transaction_session_timeout: 30000
      tcp_keepalives_idle: 300
      tcp_keepalives_interval: 10
      tcp_keepalives_count: 9 